
<!--
This is the ant build file for gpstool.
If you have problems, please contact the author of gpstool
Christof Dallermassl (christof@dallermassl.at)
-->


<project name="org.dinopolis.gpstool" default="help">


  <!-- initialize properties (this is done as a target to allow conditionals -->
  <!-- (that does not seem to work outside of a target!) -->
  <target name="init">
    <property name="release_version" value="0.5.2-pre1"/>
    <property name="target_class_dir" value="classes"/>
    <property name="source_dir" value="src"/>
    <property name="lib_dir" value="lib${file.separator}java"/>
  	<property name="native_lib_dir_base" value="lib${file.separator}native"/>
  	<property name="native_lib_dir" value="${native_lib_dir_base}/${os.name}/${os.arch}"/>
    <property name="javadoc_dir" value="javadoc"/>
    <property name="dist_name" value="gpsylon"/>
    <property name="dist_dir" value="dist"/>
    <property name="doc_dir" value="doc"/>
    <property name="aux_dir" value="auxiliary"/>
    <property name="plugin_dir" value="plugins"/>
    <property name="plugin_install_dir" value="plugins"/>
    <property name="http_proxy_host" value="129.27.153.1"/>
    <property name="http_proxy_port" value="3128"/>
    <property name="use_http_proxy" value="no"/>
    <property name="java_source_version" value="1.4"/>
    <property name="java_target_version" value="1.4"/>
    <property name="java_encoding" value="ISO-8859-1"/>
    <property name="java_deprecation" value="on"/>
    <tstamp/> <!-- needed for ${TODAY} -->
    
    <!-- create or not create a property, depending on the value of use_http_proxy -->
    <condition property="internal_use_proxy">
      <istrue value="${use_http_proxy}"/>
    </condition>

    <!-- patternset including all required external library jar files for gpsylon -->
    <patternset id="gpsylon.lib.patternset">
      <include name="gnu-regexp-1.1.3.jar" />
      <include name="openmap.jar" />
      <!--include name="comm.jar" /-->
      <include name="RXTXcomm.jar" />
      <include name="hsqldb-1.8.2.jar" />
      <include name="mysql-connector-java-3.0.15-ga-bin.jar" />
      <include name="derby.jar" />
      <include name="postgresql-8.1-405.jdbc3.jar" />
      <include name="velocity-dep-1.3.1.jar" />
      <include name="log4j-1.2.8.jar" />
    </patternset>
    
    <!-- patternset including all required external library jar files for gpstool -->
    <patternset id="gpstool.lib.patternset">
      <include name="gnu-regexp-1.1.3.jar" />
      <!--include name="comm.jar" /-->
      <include name="RXTXcomm.jar" />
      <include name="velocity-dep-1.3.1.jar" />
      <include name="log4j-1.2.8.jar" />
    </patternset>
    
    <!-- patternset including all required external library jar files for gpsinput -->
    <patternset id="gpsinput.lib.patternset">
      <include name="gnu-regexp-1.1.3.jar" />
      <!--include name="comm.jar" /-->
      <include name="RXTXcomm.jar" />
      <include name="log4j-1.2.8.jar" />
    </patternset>

    <!-- patternset including all required library jar files for util -->
    <patternset id="util.lib.patternset">
      <include name="gnu-regexp-1.1.3.jar" />
      <include name="log4j-1.2.8.jar" />
    </patternset>

    <!-- patternset including all plugins -->
    <patternset id="gpstool.default_plugin_names">
      <include name="navigationmousemode/${dist_dir}/**/*.jar" />
      <include name="downloadmousemode/${dist_dir}/**/*.jar" />
      <include name="writerasterimage/${dist_dir}/**/*.jar" />
      <include name="readgpsdrivetrack/${dist_dir}/**/*.jar" />
      <include name="readgpx/${dist_dir}/**/*.jar" />
      <include name="readtop50ovl/${dist_dir}/**/*.jar" />
      <include name="mapmanager/${dist_dir}/**/*.jar" />
      <include name="kismetimport/${dist_dir}/**/*.jar" />
      <include name="tracklayer/${dist_dir}/**/*.jar" />
      <include name="gpstool/${dist_dir}/**/*.jar" />
      <include name="importexport/${dist_dir}/**/*.jar" />
      <include name="averagepos/${dist_dir}/**/*.jar" />
      <include name="trackchart/${dist_dir}/**/*.jar" />
    </patternset>
  </target>
  
  <!-- patternset of gpstool files needed to compile the distribution -->
  
  <patternset id="compile.gpsylon-files">
    <include name="org/dinopolis/**/*.java"/>
    <exclude name="org/dinopolis/gpstool/GPSTool.java"/>
    <exclude name="org/dinopolis/gpstool/gpsinput"/>
    <exclude name="org/dinopolis/util"/>
    <exclude name="**/CVS/**/*.java"/>
  </patternset>
  
  <patternset id="compile.gpstool-files">
    <include name="org/dinopolis/gpstool/GPSTool.java"/>
    <include name="org/dinopolis/gpstool/gpx/ReadGPX.java"/>
    <exclude name="org/dinopolis/gpstool/gpsinput/**/*.java"/>
    <exclude name="org/dinopolis/util/**/*.java"/>
    <exclude name="**/CVS/**/*.java"/>
  </patternset>

  <patternset id="compile.gpsinput-files">
    <include name="org/dinopolis/gpstool/gpsinput/**/*.java"/>
    <exclude name="**/CVS/**/*.java"/>
  </patternset>

  <patternset id="compile.util-files">
    <include name="org/dinopolis/util/**/*.java"/>
    <exclude name="**/CVS/**/*.java"/>
  </patternset>


  <!-- targets -->

  <!-- help target -->
  <target name="help" depends="init">
    <echo>
      The following targets are available:
      - help: shows all available targets of this build.xml file
      - run: runs the GPSylon application
      
      - compile: compiles the util and the gpsinput library, and the GPSTool and GPSylon applications
      - compile_util: compiles the gpsinput library
      - compile_gpsinput: compiles the gpsinput library
      - compile_gpstool: compiles the GPSTool application
      - compile_gpsylon: compiles the GPSylon application
      - compile_plugins: compiles all plugins
      
      - clean_all: deletes the '${target_class_dir}','${dist_dir}' and '${javadoc_dir}' directory.
      - clean: removes all compiled classes in the '${target_class_dir}' directory.
      - clean_dist: deletes the '${dist_dir}' directory.
      - clean_javadoc: deletes the '${javadoc_dir}' directory.

      
      - jars: creates the jar files needed to execute GPSTool or GPSylon.
      - jar_util: compiles and packages the gpsinput library
      - jar_gpsinput: compiles and packages the gpsinput library
      - jar_gpstool: compiles and packages the GPSTool application
      - jar_gpsylon: compiles and packages the GPSylon application

      - dist: creates the binary and the source dist tar.gz files in the '${dist_dir}' directory.
      - bin_dist: creates a tar.gz file in the dist directory that contains all
                  needed files (plugin jar and libraries) in the '${dist_dir}' directory.
      - src_dist: creates a tar.gz file containing the source, javadoc and all
                  needed files (libraries) in the '${dist_dir}' directory.

      - upload_sourceforge_dist: uploads the source and the binary distribution to
                  the sourceforge server.
      - upload_web: uploads the web pages to the web server.

      - install_plugins: installs the plugins and all needed libraries into the
                  '${plugin_install_dir}' directory.
    </echo>
  </target>

  <!-- compile_util target -->
  <target name="compile_util" depends="init">
    <mkdir dir="${target_class_dir}"/>
    <javac srcdir="${source_dir}" 
      destdir="${target_class_dir}"
      classpathref="compile_util_classpath"
      debug="on"
      deprecation="on"
      source="${java_source_version}" 
      target="${java_target_version}"
      encoding="${java_encoding}"
      >
      <classpath id="compile_util_classpath">
        <fileset dir="${basedir}/${lib_dir}">
          <include name="gnu-regexp-1.1.3.jar" />
          <include name="log4j-1.2.8.jar" />
        </fileset>
      </classpath>
      <patternset refid="compile.util-files"/> 
    </javac>
  </target>

  <!-- compile_gpsinput target -->
  <target name="compile_gpsinput" depends="init,compile_util,jar_util"> <mkdir dir="${target_class_dir}"/>
    <javac srcdir="${source_dir}" 
           destdir="${target_class_dir}"
           classpathref="compile_gpsinput-classpath"
           debug="on"
           deprecation="${java_deprecation}"
           source="${java_source_version}" 
           target="${java_target_version}"
           encoding="${java_encoding}"
      >
      <classpath id="compile_gpsinput-classpath">
        <fileset dir="${basedir}/${lib_dir}">
          <include name="log4j-1.2.8.jar"/>
          <include name="RXTXcomm.jar"/>
        </fileset>
        <fileset dir=".">
          <include name="dinopolis-util-${release_version}.jar"/>
        </fileset>
      </classpath>
      <patternset refid="compile.gpsinput-files"/>
    </javac>
  </target>
  
  <!-- compile_gpstool target -->
  <target name="compile_gpstool" depends="init,compile_util,jar_util,compile_gpsinput,jar_gpsinput"> 
    <mkdir dir="${target_class_dir}"/>
    <javac srcdir="${source_dir}" 
           destdir="${target_class_dir}"
           classpathref="compile_gpstool-classpath"
           debug="on"
           deprecation="${java_deprecation}"
           source="${java_source_version}" 
           target="${java_target_version}"
           encoding="${java_encoding}"
      >
      <classpath id="compile_gpstool-classpath">
        <fileset dir="${basedir}/${lib_dir}">
          <include name="log4j-1.2.8.jar"/>
          <include name="RXTXcomm.jar"/>
          <include name="velocity-dep-1.3.1.jar" />
        </fileset>
        <fileset dir=".">
          <include name="dinopolis-util-${release_version}.jar"/>
          <include name="gpsinput-${release_version}.jar"/>
        </fileset>
      </classpath>
      <patternset refid="compile.gpstool-files"/>
    </javac>
  </target>
  
  <!-- compile_gpsylon target -->
  <target name="compile_gpsylon" depends="init,jar_util,jar_gpsinput">
    <mkdir dir="${target_class_dir}"/>
    <javac srcdir="${source_dir}" 
      destdir="${target_class_dir}"
      classpathref="compile_gpsylon_classpath"
      debug="on"
			deprecation="${java_deprecation}"
      source="${java_source_version}" 
      target="${java_target_version}"
      encoding="${java_encoding}"
      >
      <classpath id="compile_gpsylon_classpath">
        <fileset dir="${basedir}/${lib_dir}">
          <include name="**/*.jar"/>
        </fileset>
        <fileset dir=".">
          <include name="dinopolis-util-${release_version}.jar"/>
          <include name="gpsinput-${release_version}.jar"/>
        </fileset>
      </classpath>
      <patternset refid="compile.gpsylon-files"/>
    </javac>
  </target>
  
  <!-- compile target -->
  <target name="compile" depends="init,compile_gpsylon">
  </target>
  
  <!-- clean_all target -->
  <target name="clean_all" depends="init,clean,clean_dist,clean_javadoc">
  </target>

  <!-- clean target -->
  <target name="clean" depends="init">
    <delete>
      <fileset dir="${basedir}">
        <include name="gpstool-*.jar"/>
        <include name="gpsylon-*.jar"/>
        <include name="gpsinput-*.jar"/>
        <include name="dinopolis-util-*.jar"/>
      </fileset>
    </delete>
    <delete dir="${target_class_dir}"/>
  </target>

  <!-- clean_dist target -->
  <target name="clean_dist" depends="init">
    <delete dir="${dist_dir}"/>
  </target>

  <!-- clean_javadoc target -->
  <target name="clean_javadoc" depends="init">
    <delete dir="${javadoc_dir}"/>
  </target>

  <!-- run target -->
  <target name="run" depends="init,compile,compile_plugins,install_plugins">
  	<echo>OS: ${os.name}</echo>
  	<echo>Arch: ${os.arch}</echo>
    <java classname="org.dinopolis.gpstool.Gpsylon"
      fork="yes"
      classpathref="run_classpath">
      <jvmarg value="-Djava.library.path=${native_lib_dir}"/>
      <classpath id="run_classpath">
        <fileset dir="${basedir}">
          <include name="gpstool.jar"/>
        </fileset>
        <fileset dir="${lib_dir}">
          <patternset refid="gpsylon.lib.patternset"/>
        </fileset>
        <pathelement location="${target_class_dir}"/>
        <pathelement location="${aux_dir}"/>
      </classpath>
    </java>
  </target>

  <!-- javadoc target -->
  <target name="javadoc" depends="init,compile,javadoc_no_proxy,javadoc_proxy">
    <mkdir dir="${javadoc_dir}"/>
  </target>

  <!-- javadoc target without proxy (ineternet connection used for third party -->
  <!-- javadoc) -->
  <target name="javadoc_no_proxy" depends="compile" unless="internal_use_proxy">
    <javadoc
      packagenames="org.dinopolis.*"
      sourcepath="${source_dir}"
      classpathref="build_dir_classpath"
      destdir="${javadoc_dir}"
      author="true"
      defaultexcludes="yes"
      version="true"
      use="true"
      windowtitle="GPSTool API">
      <classpath id="build_dir_classpath">
        <fileset dir="${basedir}/lib/java/">
          <patternset refid="gpsylon.lib.patternset"/>
        </fileset>
        <!--         <fileset dir="classes/"/> -->
      </classpath>
      <link href="http://openmap.bbn.com/doc/api/"/>
      <link href="http://java.sun.com/j2se/1.4/docs/api/"/>
    </javadoc>
  </target>

  <!-- javadoc target with proxy (ineternet connection used for third party -->
  <!-- javadoc) -->
  <target name="javadoc_proxy" depends="compile" if="internal_use_proxy">
    <exec executable="/bin/sh">
      <arg value="-c"/>
      <arg value="javadoc -J-Dhttp.proxyHost=${http_proxy_host} -J-Dhttp.proxyPort=${http_proxy_port} -breakiterator -classpath ${target_class_dir}:lib/java/openmap.jar:lib/java/gnu-regexp-1.1.3.jar:lib/java/log4j-1.2.8.jar:lib/java/velocity-dep-1.3.1.jar -d ${javadoc_dir} -sourcepath ${source_dir}/ -version -author -link http://openmap.bbn.com/doc/api/ -link http://java.sun.com/j2se/1.4/docs/api/ -subpackages org.dinopolis"/>
    </exec>
  </target>

  <!-- dist target -->
  <target name="dist" depends="init,bin_dist,src_dist">
  </target>

  <!-- jar_util target -->
  <target name="jar_util" depends="compile_util">
    <!-- create a property holding the Class-Path for the manifest -->
    <path id="util.dist.classpath">
      <fileset dir="${lib_dir}">
        <patternset refid="util.lib.patternset"/>
      </fileset>
    </path>
    <pathconvert pathsep=" " property="util.dist.lib.classpath"
      refid="util.dist.classpath">
      <map from="${user.dir}${file.separator}${lib_dir}" to="lib${file.separator}java"/> 
    </pathconvert>

    <!-- build the jar file: Don't forget the MANIFEST.MF the -->
    <!-- properties files and the images ! -->
    <jar jarfile="dinopolis-util-${release_version}.jar">
      <!-- make the MANIFEST.MF file -->
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Class-Path" value="${util.dist.lib.classpath}" />
        <section name="common">
          <attribute name="Specification-Title" value="Dinopolis Util" />
          <attribute name="Specification-Version" value="${release_version}" />
          <attribute name="Specification-Vendor" value="Christof Dallermassl" />
          <attribute name="Implementation-Title" value="Dinopolis Util" />
          <attribute name="Implementation-Version" value="${release_version} ${TODAY}" /> 
          <attribute name="Implementation-Vendor" value="Christof Dallermassl" />
        </section>
      </manifest>

      <fileset dir="${target_class_dir}">
        <include name="org/dinopolis/util/**/*.class"/>
      </fileset>
    </jar>
  </target>  
 
  <!-- jar_gpsinput target -->
  <target name="jar_gpsinput" depends="compile_gpsinput">
    <!-- create a property holding the Class-Path for the manifest -->
    <path id="gpsinput.dist.classpath">
      <fileset dir="${lib_dir}">
        <patternset refid="gpsinput.lib.patternset"/>
      </fileset>
      <pathelement location="dinopolis-util-${release_version}.jar"/>
    </path>
    <pathconvert pathsep=" " property="gpsinput.dist.lib.classpath"
      refid="gpsinput.dist.classpath">
      <map from="${user.dir}${file.separator}${lib_dir}" to="lib${file.separator}java"/> 
      <map from="${user.dir}" to="."/> 
    </pathconvert>

    <!-- build the jar file: Don't forget the MANIFEST.MF the -->
    <!-- properties files and the images ! -->
    <jar jarfile="gpsinput-${release_version}.jar">
      <!-- make the MANIFEST.MF file -->
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Class-Path" value="${gpsinput.dist.lib.classpath}" />
        <section name="common">
          <attribute name="Specification-Title" value="gpsinput library" />
          <attribute name="Specification-Version" value="${release_version}" />
          <attribute name="Specification-Vendor" value="Christof Dallermassl" />
          <attribute name="Implementation-Title" value="gpsinput library" />
          <attribute name="Implementation-Version" value="${release_version} ${TODAY}" /> 
          <attribute name="Implementation-Vendor" value="Christof Dallermassl" />
        </section>
      </manifest>

      <fileset dir="${target_class_dir}">
        <include name="org/dinopolis/gpstool/gpsinput/**/*.class"/>
      </fileset>
    </jar>
  </target>

  <!-- jar_gpsinput target -->
  <target name="jar_gpstool" depends="compile_gpstool">
    <!-- create a property holding the Class-Path for the manifest -->
    <path id="gpstool.dist.classpath">
      <fileset dir="${lib_dir}">
        <patternset refid="gpstool.lib.patternset"/>
      </fileset>
      <pathelement location="dinopolis-util-${release_version}.jar"/>
      <pathelement location="gpsinput-${release_version}.jar"/>
    </path>
    <pathconvert pathsep=" " property="gpstool.dist.lib.classpath"
                 refid="gpstool.dist.classpath">
      <map from="${user.dir}${file.separator}${lib_dir}" to="lib${file.separator}java"/> 
      <map from="${user.dir}" to="."/> 
    </pathconvert>
    
    <!-- build the jar file: Don't forget the MANIFEST.MF the -->
    <!-- properties files and the images ! -->
    <jar jarfile="gpstool-${release_version}.jar">
      <!-- make the MANIFEST.MF file -->
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Class-Path" value="${gpstool.dist.lib.classpath}" />
        <attribute name="Main-Class" value="org.dinopolis.gpstool.GPSTool"/>
        <section name="common">
          <attribute name="Specification-Title" value="GPSTool" />
          <attribute name="Specification-Version" value="${release_version}" />
          <attribute name="Specification-Vendor" value="Christof Dallermassl" />
          <attribute name="Implementation-Title" value="GPSTool" />
          <attribute name="Implementation-Version" value="${release_version} ${TODAY}" /> 
          <attribute name="Implementation-Vendor" value="Christof Dallermassl" />
        </section>
      </manifest>
      
      <fileset dir="${target_class_dir}">
        <include name="org/dinopolis/gpstool/GPSTool.class"/>
        <include name="org/dinopolis/gpstool/GPSTool$*.class"/>
        <include name="org/dinopolis/gpstool/gpx/ReadGPX.class"/>
      </fileset>

      <fileset dir="${aux_dir}">
        <include name="log4j.properties"/>
      </fileset>
</jar>
  </target>

  <!-- jar_gpsylon target -->
  <target name="jar_gpsylon" depends="compile_gpsylon">
    <!-- create a property holding the Class-Path for the manifest -->
    <path id="gpsylon.dist.classpath">
      <fileset dir="${lib_dir}">
        <patternset refid="gpsylon.lib.patternset"/>
      </fileset>
      <pathelement location="dinopolis-util-${release_version}.jar"/>
      <pathelement location="gpsinput-${release_version}.jar"/>
    </path>
    <pathconvert pathsep=" " property="gpsylon.dist.lib.classpath"
                 refid="gpsylon.dist.classpath">
      <map from="${user.dir}${file.separator}${lib_dir}" to="lib${file.separator}java"/> 
      <map from="${user.dir}" to="."/> 
    </pathconvert>
    
    <!-- build the jar file: Don't forget the MANIFEST.MF the -->
    <!-- properties files and the images ! -->
    <jar jarfile="gpsylon-${release_version}.jar">
      <!-- make the MANIFEST.MF file -->
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Class-Path" value="${gpsylon.dist.lib.classpath}" />
        <attribute name="Main-Class" value="org.dinopolis.gpstool.Gpsylon"/>
        <section name="common">
          <attribute name="Specification-Title" value="Gpsylon" />
          <attribute name="Specification-Version" value="${release_version}" />
          <attribute name="Specification-Vendor" value="Christof Dallermassl" />
          <attribute name="Implementation-Title" value="Gpsylon" />
          <attribute name="Implementation-Version" value="${release_version} ${TODAY}" /> 
          <attribute name="Implementation-Vendor" value="Christof Dallermassl" />
        </section>
      </manifest>
      
      <fileset dir="${aux_dir}">
        <exclude name="**/*.xcf"/>
      </fileset>
      <fileset dir="${target_class_dir}">
          <include name="org/dinopolis/**/*.class"/>
          <exclude name="org/dinopolis/gpstool/GPSTool*.class"/>
          <exclude name="org/dinopolis/gpstool/gpsinput/"/>
          <exclude name="org/dinopolis/util/*.class"/>
          <exclude name="**/CVS/**/*.java"/>
      </fileset>
      <fileset dir=".">
        <include name="META-INF/services/org.dinopolis.gpstool.*"/>
        <include name="readme.txt"/>
      </fileset>
    </jar>
  </target>

  <!-- jars target -->
  <target name="jars" depends="init,clean,jar_gpstool,jar_gpsylon">
  </target>
  
  <!-- bin_dist target -->
  <target name="bin_dist" depends="jars,clean_dist,copy_default_plugins">
    <mkdir dir="${dist_dir}"/>

    <copy todir="${dist_dir}">
      <fileset dir=".">
        <include name="gpsylon-${release_version}.jar"/>
        <include name="gpstool-${release_version}.jar"/>
        <include name="gpsinput-${release_version}.jar"/>
        <include name="dinopolis-util-${release_version}.jar"/>
        <include name="readme.txt"/>
      	<include name="gpsylon.sh"/>
      	<include name="gpsylon.cmd"/>
      	<include name="serialportlist.cmd"/>
      	<include name="serialportlist.sh"/>
      </fileset>
    </copy>

    <copy todir="${dist_dir}/${lib_dir}">
      <fileset dir="${lib_dir}">
        <patternset refid="gpsylon.lib.patternset"/>
      </fileset>
    </copy>

    <copy todir="${dist_dir}/${native_lib_dir_base}">
      <fileset dir="${native_lib_dir_base}"/>
    </copy>
  	
    <copy todir="${dist_dir}/${doc_dir}">
      <fileset dir="${doc_dir}">
        <exclude name="images/*.psd"/>
      </fileset>
    </copy>

    <!-- create directory with the name using the release number -->
    <mkdir dir="${dist_dir}/${dist_name}_bin-${release_version}"/>
    <move todir="${dist_dir}/${dist_name}_bin-${release_version}">
      <fileset dir="${dist_dir}"/>
    </move>

    <!-- remove left over directories (no idea why they are left!) -->
    <delete dir="${dist_dir}/${doc_dir}"/>
    <delete dir="${dist_dir}/${lib_dir}"/>
    <delete dir="${dist_dir}/${plugin_dir}"/>

    <!-- create tar file -->
    <tar longfile="gnu"
      destfile="${dist_dir}/${dist_name}_bin-${release_version}.tar.gz"
      basedir="${dist_dir}"           
      includes="${dist_name}_bin-${release_version}/**/*"
      excludes="${dist_name}_bin-${release_version}/${dist_name}_bin-${release_version},*.zip,*.tar.gz"
      compression="gzip"/>

    <!-- create zip file -->
    <zip
      destfile="${dist_dir}/${dist_name}_bin-${release_version}.zip"
      basedir="${dist_dir}"           
      includes="${dist_name}_bin-${release_version}/**/*"
      excludes="${dist_name}_bin-${release_version}/${dist_name}_bin-${release_version},*.tar.gz,*.zip"/>
   

    <!-- remove temp directory -->
    <delete dir="${dist_dir}/${dist_name}_bin-${release_version}"/>
  </target>

  <!-- src_dist target -->
  <target name="src_dist" depends="init,clean,compile,javadoc">  
    <mkdir dir="${dist_dir}"/>

    <!-- create directory with the name using the release number -->
    <mkdir dir="${dist_dir}/${dist_name}_src-${release_version}"/>

    <copy todir="${dist_dir}/${dist_name}_src-${release_version}/${lib_dir}">
      <fileset dir="${lib_dir}">
        <patternset refid="gpsylon.lib.patternset"/>
      </fileset>
    </copy>
  	
    <copy todir="${dist_dir}/${dist_name}_src-${release_version}/${native_lib_dir_base}">
      <fileset dir="${native_lib_dir_base}"/>
    </copy>

    <copy todir="${dist_dir}/${dist_name}_src-${release_version}">
      <fileset dir="${basedir}">
        <include name="${doc_dir}/**"/>
        <include name="${aux_dir}/**"/>
        <include name="${source_dir}/**"/>
        <include name="${lib_dir}/**"/>
        <include name="${javadoc_dir}/**"/>
        <include name="META-INF/**"/>
        <include name="readme.txt"/>
      	<include name="gpsylon.sh"/>
      	<include name="gpsylon.cmd"/>
      	<include name="serialportlist.sh"/>
      	<include name="serialportlist.cmd"/>
        <include name="build.xml"/>
        <include name="${plugin_dir}/*/META-INF/**"/>
        <include name="${plugin_dir}/*/${source_dir}/**"/>
        <include name="${plugin_dir}/*/${doc_dir}/**"/>
        <include name="${plugin_dir}/*/${aux_dir}/**"/>
        <include name="${plugin_dir}/*/${javadoc_dir}/**"/>
        <include name="${plugin_dir}/*/${lib_dir}/**"/>
        <include name="${plugin_dir}/*/build.xml"/>
        <exclude name="${plugin_dir}/writesvgimage/**"/>
        <exclude name="*CVS*"/>
        <exclude name="*~"/>
        <exclude name="*.flc"/>
        <exclude name="*.~*"/>
      </fileset>
    </copy>

    <tar longfile="gnu"
      basedir="${dist_dir}"
      destfile="${dist_dir}/${dist_name}_src-${release_version}.tar.gz"
      excludes="*CVS*,${dist_name}_bin-${release_version}*,*.zip,*.tar.gz"
      compression="gzip"/>

    <zip 
      basedir="${dist_dir}"
      destfile="${dist_dir}/${dist_name}_src-${release_version}.zip"
      excludes="*CVS*,${dist_name}_bin-${release_version}*,*.zip,*.tar.gz"/>

    <!-- remove temp directory -->
    <delete dir="${dist_dir}/${dist_name}_src-${release_version}"/>
  </target>

  <!-- copy_default_plugins target -->
  <target name="copy_default_plugins" depends="init,bin_dist_plugins"> 
    <mkdir dir="${dist_dir}/${plugin_dir}"/>
    <copy todir="${dist_dir}/${plugin_dir}">
      <fileset dir="${plugin_dir}/navigationmousemode/${dist_dir}">
        <include name="**/*.jar"/>  
      </fileset>
      <fileset dir="${plugin_dir}/downloadmousemode/${dist_dir}">
        <include name="**/*.jar"/>  
      </fileset>
      <fileset dir="${plugin_dir}/writerasterimage/${dist_dir}">
        <include name="**/*.jar"/>  
      </fileset>
      <fileset dir="${plugin_dir}/readgpsdrivetrack/${dist_dir}">
        <include name="**/*.jar"/>  
      </fileset>
      <fileset dir="${plugin_dir}/readgpx/${dist_dir}">
        <include name="**/*.jar"/>  
      </fileset>
      <fileset dir="${plugin_dir}/readtop50ovl/${dist_dir}">
        <include name="**/*.jar"/>  
      </fileset>
      <fileset dir="${plugin_dir}/mapmanager/${dist_dir}">
        <include name="**/*.jar"/>  
      </fileset>
      <fileset dir="${plugin_dir}/kismetimport/${dist_dir}">
        <include name="**/*.jar"/>  
      </fileset>
      <fileset dir="${plugin_dir}/tracklayer/${dist_dir}">
        <include name="**/*.jar"/>  
      </fileset>
      <fileset dir="${plugin_dir}/trackchart/${dist_dir}">
        <include name="**/*.jar"/>  
      </fileset>
      <fileset dir="${plugin_dir}/averagepos/${dist_dir}">
        <include name="**/*.jar"/>  
      </fileset>
      <fileset dir="${plugin_dir}/gpstool/${dist_dir}">
        <include name="**/*.jar"/>  
      </fileset>
      <fileset dir="${plugin_dir}/importexport/${dist_dir}">
        <include name="**/*.jar"/>  
      </fileset>
    </copy>
  </target>

  <!-- plugins_dist target -->
  <target name="plugins_dist" depends="init,bin_dist_plugins"> 
    <mkdir dir="${dist_dir}"/>
    <tar longfile="gnu"
      basedir="${basedir}"
      destfile="${dist_dir}/${dist_name}_src-${release_version}.tar.gz"
      includes="${source_dir}/**,${lib_dir}/**,${doc_dir}/**,${javadoc_dir}/**,${aux_dir}/**,build.xml"
      excludes="*CVS*"
      compression="gzip"/>
  </target>

  <!-- ======================================== -->
  <!--           upload targets                 -->
  <!-- ======================================== -->

  <!-- upload webpages target -->
  <target name="upload_web" depends="init">
    <exec dir="${doc_dir}/" executable="/bin/sh">
      <arg value="-c"/>
      <!--arg value='tar cvf - *.html *.pdf *.css changelog.txt images/*.png images/*.gif | ssh -l cdaller gpsmap.sourceforge.net "(cd gpsmap/htdocs/ ; tar xf -)"'/-->
      <arg value='tar cvf - *.html *.pdf *.css changelog.txt images/*.png images/*.gif | ssh www.tegmento.org "(cd /var/www/gpsylon/ ; tar xf -)"'/>
    </exec>
    <exec dir="${doc_dir}/" executable="/bin/sh">
      <arg value="-c"/>
      <!--arg value='ssh -l cdaller gpsmap.sourceforge.net "(cd gpsmap/htdocs/ ; chmod 644 *.html *.pdf *.css *.txt images/*.png images/*.gif)"'/-->
      <arg value='ssh -l cdaller www.tegmento.org "(cd /var/www/gpsylon/ ; chmod 644 *.html *.pdf *.css *.txt images/*.png images/*.gif)"'/>
    </exec>
  </target>


  <!-- upload distributions target -->
  <target name="upload_sourceforge_dist" depends="init">
    <exec dir="${dist_dir}" executable="/bin/sh">
      <arg value="-c"/>
      <arg value='ncftpput upload.sourceforge.net incoming ${dist_name}_???-${release_version}.tar.gz ${dist_name}_???-${release_version}.zip'/>
    </exec>
  </target>

  <!-- ======================================== -->
  <!--           plugin targets                 -->
  <!-- ======================================== -->

  <!-- compile_plugins target -->
  <target name="compile_plugins"
    depends="init,compile_downloadmousemode_plugin,compile_navigationmousemode_plugin,compile_writerasterimage_plugin,compile_readgpsdrivetrack_plugin,compile_readgpx_plugin,compile_readtop50ovl_plugin,compile_mapmanager_plugin,compile_kismetimport_plugin,compile_importexport_plugin,compile_tracklayer_plugin,compile_gpstool_plugin,compile_averagepos_plugin,compile_trackchart_plugin"> 
  </target>

  <!-- compile_downloadmousemode_plugin target -->
  <target name="compile_downloadmousemode_plugin" depends="init"> 
    <ant dir="${plugin_dir}/downloadmousemode" target="compile" inheritAll="false"/>
  </target>

  <!-- compile_navigationmousemode_plugin target -->
  <target name="compile_navigationmousemode_plugin" depends="init"> 
    <ant dir="${plugin_dir}/navigationmousemode" target="compile" inheritAll="false"/>
  </target>

  <!-- compile_writerasterimage_plugin target -->
  <target name="compile_writerasterimage_plugin" depends="init"> 
    <ant dir="${plugin_dir}/writerasterimage" target="compile" inheritAll="false"/>
  </target>

  <!-- compile_writesvgimage_plugin target -->
  <target name="compile_writesvgimage_plugin" depends="init"> 
    <ant dir="${plugin_dir}/writesvgimage" target="compile" inheritAll="false"/>
  </target>

  <!-- compile_readgpsdrivetrack_plugin target -->
  <target name="compile_readgpsdrivetrack_plugin" depends="init"> 
    <ant dir="${plugin_dir}/readgpsdrivetrack" target="compile" inheritAll="false"/>
  </target>

  <!-- compile_readgpx_plugin target -->
  <target name="compile_readgpx_plugin" depends="init"> 
    <ant dir="${plugin_dir}/readgpx" target="compile" inheritAll="false"/>
  </target>

  <!-- compile_readtop50ovl_plugin target -->
  <target name="compile_readtop50ovl_plugin" depends="init"> 
    <ant dir="${plugin_dir}/readtop50ovl" target="compile" inheritAll="false"/>
  </target>

  <!-- compile_mapmanager_plugin target -->
  <target name="compile_mapmanager_plugin" depends="init"> 
    <ant dir="${plugin_dir}/mapmanager" target="compile" inheritAll="false"/>
  </target>

  <!-- compile_kismetimport_plugin target -->
  <target name="compile_kismetimport_plugin" depends="init"> 
    <ant dir="${plugin_dir}/kismetimport" target="compile" inheritAll="false"/>
  </target>

  <!-- compile_importexport_plugin target -->
  <target name="compile_importexport_plugin" depends="init"> 
    <ant dir="${plugin_dir}/importexport" target="compile" inheritAll="false"/>
  </target>

  <!-- compile_tracklayer_plugin target -->
  <target name="compile_tracklayer_plugin" depends="init"> 
    <ant dir="${plugin_dir}/tracklayer" target="compile" inheritAll="false"/>
  </target>

  <!-- compile_trackchart_plugin target -->
  <target name="compile_trackchart_plugin" depends="init"> 
    <ant dir="${plugin_dir}/trackchart" target="compile" inheritAll="false"/>
  </target>

  <!-- compile_gpstool_plugin target -->
  <target name="compile_gpstool_plugin" depends="init"> 
    <ant dir="${plugin_dir}/gpstool" target="compile" inheritAll="false"/>
  </target>

  <!-- compile_averagepos_plugin target -->
  <target name="compile_averagepos_plugin" depends="init"> 
    <ant dir="${plugin_dir}/averagepos" target="compile" inheritAll="false"/>
  </target>

  <!-- bin_dist_plugins target -->
  <target name="bin_dist_plugins"
    depends="init,bin_dist_downloadmousemode_plugin,bin_dist_navigationmousemode_plugin,bin_dist_writerasterimage_plugin,bin_dist_readgpsdrivetrack_plugin,bin_dist_readgpx_plugin,bin_dist_readtop50ovl_plugin,bin_dist_mapmanager_plugin,bin_dist_kismetimport_plugin,bin_dist_importexport_plugin,bin_dist_tracklayer_plugin,bin_dist_gpstool_plugin,bin_dist_averagepos_plugin,bin_dist_trackchart_plugin"> 
  </target>

  <!-- bin_dist_downloadmousemode_plugin target -->
  <target name="bin_dist_downloadmousemode_plugin" depends="init"> 
    <ant dir="${plugin_dir}/downloadmousemode" target="bin_dist" inheritAll="false"/>
  </target>

  <!-- bin_dist_navigationmousemode_plugin target -->
  <target name="bin_dist_navigationmousemode_plugin" depends="init"> 
    <ant dir="${plugin_dir}/navigationmousemode" target="bin_dist" inheritAll="false"/>
  </target>

  <!-- bin_dist_writerasterimage_plugin target -->
  <target name="bin_dist_writerasterimage_plugin" depends="init"> 
    <ant dir="${plugin_dir}/writerasterimage" target="bin_dist" inheritAll="false"/>
  </target>

  <!-- bin_dist_writesvgimage_plugin target -->
  <target name="bin_dist_writesvgimage_plugin" depends="init"> 
    <ant dir="${plugin_dir}/writesvgimage" target="bin_dist" inheritAll="false"/>
  </target>

  <!-- bin_dist_readgpsdrivetrack_plugin target -->
  <target name="bin_dist_readgpsdrivetrack_plugin" depends="init"> 
    <ant dir="${plugin_dir}/readgpsdrivetrack" target="bin_dist" inheritAll="false"/>
  </target>

  <!-- bin_dist_readgpx_plugin target -->
  <target name="bin_dist_readgpx_plugin" depends="init"> 
    <ant dir="${plugin_dir}/readgpx" target="bin_dist" inheritAll="false"/>
  </target>

  <!-- bin_dist_readgpx_plugin target -->
  <target name="bin_dist_readtop50ovl_plugin" depends="init"> 
    <ant dir="${plugin_dir}/readtop50ovl" target="bin_dist" inheritAll="false"/>
  </target>

  <!-- bin_dist_mapmanager_plugin target -->
  <target name="bin_dist_mapmanager_plugin" depends="init"> 
    <ant dir="${plugin_dir}/mapmanager" target="bin_dist" inheritAll="false"/>
  </target>

  <!-- bin_dist_kismetimport_plugin target -->
  <target name="bin_dist_kismetimport_plugin" depends="init"> 
    <ant dir="${plugin_dir}/kismetimport" target="bin_dist" inheritAll="false"/>
  </target>

  <!-- bin_dist_importexport_plugin target -->
  <target name="bin_dist_importexport_plugin" depends="init"> 
    <ant dir="${plugin_dir}/importexport" target="bin_dist" inheritAll="false"/>
  </target>

  <!-- bin_dist_tracklayer_plugin target -->
  <target name="bin_dist_tracklayer_plugin" depends="init"> 
    <ant dir="${plugin_dir}/tracklayer" target="bin_dist" inheritAll="false"/>
  </target>

  <!-- bin_dist_trackchart_plugin target -->
  <target name="bin_dist_trackchart_plugin" depends="init"> 
    <ant dir="${plugin_dir}/trackchart" target="bin_dist" inheritAll="false"/>
  </target>

  <!-- bin_dist_gpstool_plugin target -->
  <target name="bin_dist_gpstool_plugin" depends="init"> 
    <ant dir="${plugin_dir}/gpstool" target="bin_dist" inheritAll="false"/>
  </target>

  <!-- bin_dist_averagepos_plugin target -->
  <target name="bin_dist_averagepos_plugin" depends="init"> 
    <ant dir="${plugin_dir}/averagepos" target="bin_dist" inheritAll="false"/>
  </target>

  <!-- install_plugins target -->
  <target name="install_plugins"
    depends="init,install_downloadmousemode_plugin,install_navigationmousemode_plugin,install_writerasterimage_plugin,install_readgpsdrivetrack_plugin,install_readgpx_plugin,install_readtop50ovl_plugin,install_mapmanager_plugin,install_kismetimport_plugin,install_plugin_importexport_plugin,install_plugin_tracklayer_plugin,install_plugin_gpstool_plugin,install_plugin_averagepos_plugin,install_plugin_trackchart_plugin"> 
  </target>

  <!-- install_downloadmousemode_plugin target -->
  <target name="install_downloadmousemode_plugin" depends="init"> 
    <ant dir="${plugin_dir}/downloadmousemode" target="install_plugin" inheritAll="false"/>
  </target>

  <!-- install_navigationmousemode_plugin target -->
  <target name="install_navigationmousemode_plugin" depends="init"> 
    <ant dir="${plugin_dir}/navigationmousemode" target="install_plugin" inheritAll="false"/>
  </target>

  <!-- install_writerasterimage_plugin target -->
  <target name="install_writerasterimage_plugin" depends="init"> 
    <ant dir="${plugin_dir}/writerasterimage" target="install_plugin" inheritAll="false"/>
  </target>

  <!-- install_writesvgimage_plugin target -->
  <target name="install_writesvgimage_plugin" depends="init"> 
    <ant dir="${plugin_dir}/writesvgimage" target="install_plugin" inheritAll="false"/>
  </target>

  <!-- install_readgpsdrivetrack_plugin target -->
  <target name="install_readgpsdrivetrack_plugin" depends="init"> 
    <ant dir="${plugin_dir}/readgpsdrivetrack" target="install_plugin" inheritAll="false"/>
  </target>

  <!-- install_readgpx_plugin target -->
  <target name="install_readgpx_plugin" depends="init"> 
    <ant dir="${plugin_dir}/readgpx" target="install_plugin" inheritAll="false"/>
  </target>

  <!-- install_readtop50ovl_plugin target -->
  <target name="install_readtop50ovl_plugin" depends="init"> 
    <ant dir="${plugin_dir}/readtop50ovl" target="install_plugin" inheritAll="false"/>
  </target>

  <!-- install_mapmanager_plugin target -->
  <target name="install_mapmanager_plugin" depends="init"> 
    <ant dir="${plugin_dir}/mapmanager" target="install_plugin" inheritAll="false"/>
  </target>

  <!-- install_kismetimport_plugin target -->
  <target name="install_kismetimport_plugin" depends="init"> 
    <ant dir="${plugin_dir}/kismetimport" target="install_plugin" inheritAll="false"/>
  </target>

  <!-- install_plugin_importexport_plugin target -->
  <target name="install_plugin_importexport_plugin" depends="init"> 
    <ant dir="${plugin_dir}/importexport" target="install_plugin" inheritAll="false"/>
  </target>

  <!-- install_plugin_tracklayer_plugin target -->
  <target name="install_plugin_tracklayer_plugin" depends="init"> 
    <ant dir="${plugin_dir}/tracklayer" target="install_plugin" inheritAll="false"/>
  </target>

  <!-- install_plugin_trackchart_plugin target -->
  <target name="install_plugin_trackchart_plugin" depends="init"> 
    <ant dir="${plugin_dir}/trackchart" target="install_plugin" inheritAll="false"/>
  </target>

  <!-- install_plugin_gpstool_plugin target -->
  <target name="install_plugin_gpstool_plugin" depends="init"> 
    <ant dir="${plugin_dir}/gpstool" target="install_plugin" inheritAll="false"/>
  </target>

  <!-- install_plugin_averagepos_plugin target -->
  <target name="install_plugin_averagepos_plugin" depends="init"> 
    <ant dir="${plugin_dir}/averagepos" target="install_plugin" inheritAll="false"/>
  </target>


</project>
