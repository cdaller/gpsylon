#!/usr/bin/perl -w


$dat = $ARGV[0] ||  die("missing arguments! \nusage $0 <db.DAT>\n");

# dd if=db50_200.DAT bs=1 skip=127 | xxd -c 128 | less
#e9e9 e5e5 e1e1 e5e5 e9e9 f5f5 f1f1 f5f5 8989 8585 8181 8585 8989 f5f5 f1f1 f5f5 e9e9 e5e5 e1e1 e5e5 e9e9 f5f5 f1f1 f5f5 c9c9 c5c5 c1c1 c5c5 c9c9 f5f5 f1f1 f5f5 e9e9 e5e5 e1e1 e5e5 e9e9 f5f5 f1f1 f5f5 0909 0505 0101 0505 0909 f5f5 f1f1 f5f5 e9e9 e5e5 e1e1 e5e5 e9e9 f5f5 f1f1 f5f5 c9c9 c5c5 c1c1 c5c5 c9c9 f5f5 f1f1 f5f5

@key = 
	(0xe9, 0xe9, 0xe5, 0xe5, 0xe1, 0xe1, 0xe5, 0xe5, 
	 0xe9, 0xe9, 0xf5, 0xf5, 0xf1, 0xf1, 0xf5, 0xf5, 
	 0x89, 0x89, 0x85, 0x85, 0x81, 0x81, 0x85, 0x85, 
	 0x89, 0x89, 0xf5, 0xf5, 0xf1, 0xf1, 0xf5, 0xf5, 
	 0xe9, 0xe9, 0xe5, 0xe5, 0xe1, 0xe1, 0xe5, 0xe5, 
	 0xe9, 0xe9, 0xf5, 0xf5, 0xf1, 0xf1, 0xf5, 0xf5, 
	 0xc9, 0xc9, 0xc5, 0xc5, 0xc1, 0xc1, 0xc5, 0xc5,
	 0xc9, 0xc9, 0xf5, 0xf5, 0xf1, 0xf1, 0xf5, 0xf5,
	 0xe9, 0xe9, 0xe5, 0xe5, 0xe1, 0xe1, 0xe5, 0xe5, 
	 0xe9, 0xe9, 0xf5, 0xf5, 0xf1, 0xf1, 0xf5, 0xf5, 
	 0x09, 0x09, 0x05, 0x05, 0x01, 0x01, 0x05, 0x05, 
	 0x09, 0x09, 0xf5, 0xf5, 0xf1, 0xf1, 0xf5, 0xf5, 
	 0xe9, 0xe9, 0xe5, 0xe5, 0xe1, 0xe1, 0xe5, 0xe5, 
	 0xe9, 0xe9, 0xf5, 0xf5, 0xf1, 0xf1, 0xf5, 0xf5, 
	 0xc9, 0xc9, 0xc5, 0xc5, 0xc1, 0xc1, 0xc5, 0xc5, 
	 0xc9, 0xc9, 0xf5, 0xf5, 0xf1, 0xf1, 0xf5, 0xf5);


open(DAT, " < $dat") || die("can't open igc file: $!");
binmode DAT,":bytes";

# "pointer" for reading the key
$kc = 0;

# 1) --------------------------------------------------------
# skip unencrypted data / very first header
# comment this out for *.IDX
$skip = 127;

#$skip = 6144;
#$skip = 4735;

sysread(DAT,$read,$skip);
#print $read;


# 2) ---------------------------------------------- 
# decrypt header 36x128bytes chunks

$headerlength = 36;
$hc = 0;

while($hc < $headerlength && sysread DAT,$read,1) {

	$nread = unpack("C",$read);
	#printf "%x",$nread;
	#print "$kc.";
	#printf "%x",$key[$kc];
	$plain = $nread ^ $key[$kc++];
	

	if ($kc > $#key) { 
		$kc = 0;
		$hc++;
	} 
	
	$cplain = pack("C",$plain); 
	#print $cplain;
}



# 3) ----------------------------------------------------
# decrypt dbisam entries: 116byte chunks
# key offset is always incremented

$kc = 0;

while(sysread DAT,$read,1) {	
	
	$nread = unpack("C",$read);
	$plain = $nread ^ $key[$kc++];	

	if($kc >= 116) {
	
		# finished reading entry
		
		# reset pointer
		$kc = 0;#$kcoffset++;
	}
	
	$cplain = pack("C",$plain); 
  print $cplain;
}
